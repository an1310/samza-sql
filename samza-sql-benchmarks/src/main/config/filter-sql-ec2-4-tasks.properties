
# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=filter-sql-4

# YARN
yarn.package.path=http://mugo.cs.indiana.edu/${project.artifactId}-${pom.version}-dist.tar.gz
yarn.container.memory.mb=2048
yarn.container.count=4

# Task
task.class=org.apache.samza.sql.bench.FilterSQLTask
task.inputs=kafka.orders

# Serializers
serializers.registry.orders.class=org.apache.samza.sql.bench.serde.CustomSqlAvroSerdeFactory
serializers.orders.schema=ORDERS
serializers.registry.int.class=org.apache.samza.sql.data.serializers.SqlIntegerSerdeFactory


# Kafka System
systems.kafka.samza.offset.default=oldest
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.streams.orders.samza.msg.serde=orders
systems.kafka.streams.orders.samza.key.serde=int
systems.kafka.streams.filtersqloutput.samza.msg.serde=orders
systems.kafka.streams.filtersqloutput.samza.key.serde=int
systems.kafka.consumer.zookeeper.connect=ec2-52-34-163-124.us-west-2.compute.amazonaws.com:2181,ec2-52-34-95-179.us-west-2.compute.amazonaws.com:2181,ec2-52-25-120-232.us-west-2.compute.amazonaws.com:2181
systems.kafka.producer.bootstrap.servers=ec2-52-35-218-26.us-west-2.compute.amazonaws.com:9092,ec2-52-34-251-48.us-west-2.compute.amazonaws.com:9092,ec2-52-35-134-95.us-west-2.compute.amazonaws.com:9092

# Define a metrics reporter called "snapshot", which publishes metrics
# every 60 seconds.
metrics.reporters=snapshot
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory

# Tell the snapshot reporter to publish to a topic called "metrics"
# in the "kafka" system.
metrics.reporter.snapshot.stream=kafka.filtersqlmetrics4tasks

# Encode metrics data as JSON.
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory
systems.kafka.streams.filtersqlmetrics2tasks.samza.msg.serde=metrics
