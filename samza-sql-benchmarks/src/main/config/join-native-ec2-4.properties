
# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=join-native-4-2

# YARN
yarn.package.path=http://mugo.cs.indiana.edu/${project.artifactId}-${pom.version}-dist.tar.gz
yarn.container.memory.mb=2048
yarn.container.count=4

# Task
task.class=org.apache.samza.sql.bench.JoinTask
task.inputs=kafka.orders,kafka.products

task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=1

# Serializers
serializers.registry.orders.class=org.apache.samza.sql.bench.serde.ConfigurableAvroSerdeFactory
serializers.orders.schema=ORDERS
serializers.registry.int.class=org.apache.samza.serializers.IntegerSerdeFactory
serializers.registry.products.class=org.apache.samza.sql.bench.serde.ConfigurableAvroSerdeFactory
serializers.products.schema=PRODUCT
serializers.registry.join.class=org.apache.samza.sql.bench.serde.ConfigurableAvroSerdeFactory
serializers.join.schema=JOIN
serializers.registry.str.class=org.apache.samza.sql.bench.utils.StringSerdeFactory

# Stores
stores.products.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.products.key.serde=int
stores.products.msg.serde=products
stores.products.changelog=kafka.productsstorelog
stores.products.changelog.replication.factor=1


systems.kafka.streams.products.samza.bootstrap=true

# Kafka System
systems.kafka.samza.offset.default=oldest
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.streams.orders.samza.msg.serde=orders
systems.kafka.streams.orders.samza.key.serde=int
systems.kafka.streams.products.samza.msg.serde=products
systems.kafka.streams.products.samza.key.serde=int
systems.kafka.streams.nativejoinoutput.samza.msg.serde=join
systems.kafka.streams.nativejoinoutput.samza.key.serde=int
systems.kafka.consumer.zookeeper.connect=ec2-52-10-34-114.us-west-2.compute.amazonaws.com:2181,ec2-52-35-25-54.us-west-2.compute.amazonaws.com:2181,ec2-52-34-85-140.us-west-2.compute.amazonaws.com:2181
systems.kafka.producer.bootstrap.servers=ec2-52-34-244-4.us-west-2.compute.amazonaws.com:9092,ec2-52-11-125-146.us-west-2.compute.amazonaws.com:9092,ec2-52-35-184-219.us-west-2.compute.amazonaws.com:9092

# Define a metrics reporter called "snapshot", which publishes metrics
# every 60 seconds.
metrics.reporters=snapshot
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory

# Tell the snapshot reporter to publish to a topic called "metrics"
# in the "kafka" system.
metrics.reporter.snapshot.stream=kafka.joinsqlmetrics

# Encode metrics data as JSON.
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory
systems.kafka.streams.joinsqlmetrics.samza.msg.serde=metrics
